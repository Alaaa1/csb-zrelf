{"version":3,"sources":["actions/authedUser.js","components/Login.js","utils/_DATA.js","actions/users.js","actions/questions.js","actions/initial.js","components/Question.js","components/Questions.js","components/QuestionsTab.js","components/Navbar.js","components/HomePage.js","components/NewQuestion.js","components/Leaderboard.js","components/NotFound.js","components/Poll.js","components/App.js","reducers/authedUser.js","reducers/questions.js","reducers/users.js","reducers/index.js","reducers/currentQuestion.js","middleware/logger.js","middleware/index.js","index.js"],"names":["SET_AUTHED_USER","setAuthedUser","id","type","options","key","text","value","image","avatar","src","Login","state","handleDestination","console","log","props","location","pathname","getAuthedUser","authedUser","dispatch","handleChange","e","setState","style","textAlign","margin","marginTop","width","Dropdown","placeholder","fluid","selection","onChange","this","to","disabled","onClick","Component","connect","users","Object","entries","withRouter","sarahedo","name","avatarURL","answers","questions","tylermcginnis","johndoe","author","timestamp","optionOne","votes","optionTwo","_saveQuestion","question","Promise","res","rej","formattedQuestion","optionOneText","optionTwoText","Math","random","toString","substring","Date","now","formatQuestion","setTimeout","concat","RECEIVE_USERS","UPDATE_USER_ANSWERS","UPDATE_ANSWERS_VOTES","handleUpdateUserAnswers","qID","answer","getState","qid","_saveQuestionAnswer","then","option","updateUserAnswers","updateAnswersVotes","RECEIVE_QUESTIONS","GET_CURRENT_QUESTION","ADD_QUESTION","ADD_QUESTION_TO_USER","handleAddQuestion","addQuestion","action","addQuestionToUser","getCurrentQuestion","handleInitialData","all","receiveUsers","receiveQuestions","Question","handleClick","question_withAnswered","answered","Card","Content","Image","floated","Header","Description","extra","className","Button","basic","color","Questions","getAnsweredQuestions","keys","filter","includes","getUnAnsweredQuestions","Group","sort","a","b","map","qId","panes","menuItem","render","Tab","Pane","QuestionsTab","Navbar","activeItem","handleItemClick","handleLogOut","Menu","secondary","Item","as","Link","active","position","alt","HomePage","NewQuestion","handleOptionOne","target","handleOptionTwo","Form","htmlFor","LeaderBoard","userID","length","NotFound","Poll","currentQuestion","handeVoting","match","params","history","push","display","height","minHeight","overflow","size","required","Progress","percent","progress","App","path","component","Leaderboard","combineReducers","logger","store","next","group","returnValue","groupEnd","applyMiddleware","thunk","createStore","reducer","middleware","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.31bfc9da.chunk.js","sourcesContent":["export const SET_AUTHED_USER = 'SET_AUTHED_USER'\n\nexport const setAuthedUser = (id) => ({\n    type: SET_AUTHED_USER,\n    id,\n})","import React, { Component } from \"react\";\nimport { Dropdown } from \"semantic-ui-react\";\nimport { Link, withRouter } from \"react-router-dom\";\nimport { setAuthedUser } from \"../actions/authedUser\";\nimport { connect } from \"react-redux\";\n\nconst options = [\n  {\n    key: \"sarahedo\",\n    text: \"Sarah Edo\",\n    value: \"sarahedo\",\n    image: {\n      avatar: true,\n      src: \"https://react.semantic-ui.com/images/avatar/small/jenny.jpg\"\n    }\n  },\n  {\n    key: \"tylermcginnis\",\n    text: \"Tyler McGinnis\",\n    value: \"tylermcginnis\",\n    image: {\n      avatar: true,\n      src: \"https://react.semantic-ui.com/images/avatar/small/matt.jpg\"\n    }\n  },\n  {\n    key: \"johndoe\",\n    text: \"John Doe\",\n    value: \"johndoe\",\n    image: {\n      avatar: true,\n      src: \"https://react.semantic-ui.com/images/avatar/small/christian.jpg\"\n    }\n  }\n];\n\nclass Login extends Component {\n  state = {\n    value: \"\"\n  };\n\n  handleDestination = () => {\n    console.log(this.props.location);\n    if (\n      this.props.location.pathname === \"/\" ||\n      this.props.location.pathname === \"/csb-zrelf/\"\n    ) {\n      return \"/homepage\";\n    } else {\n      return this.props.location.pathname;\n    }\n  };\n\n  getAuthedUser = (authedUser) => {\n    this.props.dispatch(setAuthedUser(authedUser));\n  };\n\n  handleChange = (e, { value }) => {\n    this.setState({ value });\n  };\n\n  render() {\n    return (\n      <>\n        <h2 style={{ textAlign: \"center\", margin: \"0 auto\", marginTop: \"10%\" }}>\n          Welcome to Would You Rather App{\" \"}\n        </h2>{\" \"}\n        <br />\n        <h2 style={{ textAlign: \"center\", margin: \"0 auto\" }}>\n          {\" \"}\n          Please Login:{\" \"}\n        </h2>{\" \"}\n        <div style={{ width: \"50%\", textAlign: \"center\", margin: \"0 auto\" }}>\n          <form>\n            <Dropdown\n              placeholder=\"Select User\"\n              fluid\n              selection\n              options={options}\n              onChange={this.handleChange}\n            />{\" \"}\n            <Link to={this.handleDestination}>\n              <button\n                disabled={this.state.value === \"\"}\n                type=\"submit\"\n                value=\"login\"\n                onClick={() => this.getAuthedUser(this.state.value)}\n              >\n                Login{\" \"}\n              </button>{\" \"}\n            </Link>{\" \"}\n          </form>{\" \"}\n        </div>{\" \"}\n      </>\n    );\n  }\n}\n\nconst mapStateToProps = ({ users }) => {\n  return {\n    users: Object.entries(users)\n  };\n};\n\nexport default connect(mapStateToProps)(withRouter(Login));\n","let users = {\n    sarahedo: {\n        id: 'sarahedo',\n        name: 'Sarah Edo',\n        avatarURL: 'https://react.semantic-ui.com/images/avatar/small/jenny.jpg',\n        answers: {\n            \"8xf0y6ziyjabvozdd253nd\": 'optionOne',\n            \"6ni6ok3ym7mf1p33lnez\": 'optionTwo',\n            \"am8ehyc8byjqgar0jgpub9\": 'optionTwo',\n            \"loxhs1bqm25b708cmbf3g\": 'optionTwo'\n        },\n        questions: ['8xf0y6ziyjabvozdd253nd', 'am8ehyc8byjqgar0jgpub9']\n    },\n    tylermcginnis: {\n        id: 'tylermcginnis',\n        name: 'Tyler McGinnis',\n        avatarURL: 'https://react.semantic-ui.com/images/avatar/small/matt.jpg',\n        answers: {\n            \"vthrdm985a262al8qx3do\": 'optionOne',\n            \"xj352vofupe1dqz9emx13r\": 'optionTwo',\n        },\n        questions: ['loxhs1bqm25b708cmbf3g', 'vthrdm985a262al8qx3do'],\n    },\n    johndoe: {\n        id: 'johndoe',\n        name: 'John Doe',\n        avatarURL: 'https://react.semantic-ui.com/images/avatar/small/christian.jpg',\n        answers: {\n            \"xj352vofupe1dqz9emx13r\": 'optionOne',\n            \"vthrdm985a262al8qx3do\": 'optionTwo',\n            \"6ni6ok3ym7mf1p33lnez\": 'optionTwo'\n        },\n        questions: ['6ni6ok3ym7mf1p33lnez', 'xj352vofupe1dqz9emx13r'],\n    }\n}\n\nlet questions = {\n    \"8xf0y6ziyjabvozdd253nd\": {\n        id: '8xf0y6ziyjabvozdd253nd',\n        author: 'sarahedo',\n        timestamp: 1467166872634,\n        optionOne: {\n            votes: ['sarahedo'],\n            text: 'have horrible short term memory',\n        },\n        optionTwo: {\n            votes: [],\n            text: 'have horrible long term memory'\n        }\n    },\n    \"6ni6ok3ym7mf1p33lnez\": {\n        id: '6ni6ok3ym7mf1p33lnez',\n        author: 'johndoe',\n        timestamp: 1468479767190,\n        optionOne: {\n            votes: [],\n            text: 'become a superhero',\n        },\n        optionTwo: {\n            votes: ['johndoe', 'sarahedo'],\n            text: 'become a supervillain'\n        }\n    },\n    \"am8ehyc8byjqgar0jgpub9\": {\n        id: 'am8ehyc8byjqgar0jgpub9',\n        author: 'sarahedo',\n        timestamp: 1488579767190,\n        optionOne: {\n            votes: [],\n            text: 'be telekinetic',\n        },\n        optionTwo: {\n            votes: ['sarahedo'],\n            text: 'be telepathic'\n        }\n    },\n    \"loxhs1bqm25b708cmbf3g\": {\n        id: 'loxhs1bqm25b708cmbf3g',\n        author: 'tylermcginnis',\n        timestamp: 1482579767190,\n        optionOne: {\n            votes: [],\n            text: 'be a front-end developer',\n        },\n        optionTwo: {\n            votes: ['sarahedo'],\n            text: 'be a back-end developer'\n        }\n    },\n    \"vthrdm985a262al8qx3do\": {\n        id: 'vthrdm985a262al8qx3do',\n        author: 'tylermcginnis',\n        timestamp: 1489579767190,\n        optionOne: {\n            votes: ['tylermcginnis'],\n            text: 'find $50 yourself',\n        },\n        optionTwo: {\n            votes: ['johndoe'],\n            text: 'have your best friend find $500'\n        }\n    },\n    \"xj352vofupe1dqz9emx13r\": {\n        id: 'xj352vofupe1dqz9emx13r',\n        author: 'johndoe',\n        timestamp: 1493579767190,\n        optionOne: {\n            votes: ['johndoe'],\n            text: 'write JavaScript',\n        },\n        optionTwo: {\n            votes: ['tylermcginnis'],\n            text: 'write Swift'\n        }\n    },\n}\n\nfunction generateUID() {\n    return Math.random().toString(36).substring(2, 15) + Math.random().toString(36).substring(2, 15)\n}\n\nexport function _getUsers() {\n    return new Promise((res, rej) => {\n        setTimeout(() => res({...users }), 1000)\n    })\n}\n\nexport function _getQuestions() {\n    return new Promise((res, rej) => {\n        setTimeout(() => res({...questions }), 1000)\n    })\n}\n\nfunction formatQuestion({ optionOneText, optionTwoText, author }) {\n    return {\n        id: generateUID(),\n        timestamp: Date.now(),\n        author,\n        optionOne: {\n            votes: [],\n            text: optionOneText,\n        },\n        optionTwo: {\n            votes: [],\n            text: optionTwoText,\n        }\n    }\n}\n\nexport function _saveQuestion(question) {\n    return new Promise((res, rej) => {\n        const authedUser = question.author;\n        const formattedQuestion = formatQuestion(question);\n\n        setTimeout(() => {\n            questions = {\n                ...questions,\n                [formattedQuestion.id]: formattedQuestion\n            }\n\n            users = {\n                ...users,\n                [authedUser]: {\n                    ...users[authedUser],\n                    questions: users[authedUser].questions.concat([formattedQuestion.id])\n                }\n            }\n\n            res(formattedQuestion)\n        }, 1000)\n    })\n}\n\nexport function _saveQuestionAnswer({ authedUser, qid, answer }) {\n    return new Promise((res, rej) => {\n        setTimeout(() => {\n            users = {\n                ...users,\n                [authedUser]: {\n                    ...users[authedUser],\n                    answers: {\n                        ...users[authedUser].answers,\n                        [qid]: answer\n                    }\n                }\n            }\n\n            questions = {\n                ...questions,\n                [qid]: {\n                    ...questions[qid],\n                    [answer]: {\n                        ...questions[qid][answer],\n                        votes: questions[qid][answer].votes.concat([authedUser])\n                    }\n                }\n            }\n\n            res()\n        }, 500)\n    })\n}","import { _saveQuestionAnswer } from \"../utils/_DATA\";\n\nexport const RECEIVE_USERS = 'RECEIVE_USERS'\nexport const UPDATE_USER_ANSWERS = 'UPDATE_USER_ANSWERS'\nexport const UPDATE_ANSWERS_VOTES = 'UPDATE_ANSWERS_VOTES'\n\n\n\nexport const receiveUsers = (users) => ({\n    type: RECEIVE_USERS,\n    users,\n})\n\nconst updateUserAnswers = (authedUser, qID, option) => ({\n    type: UPDATE_USER_ANSWERS,\n    authedUser,\n    qID,\n    option,\n})\n\nconst updateAnswersVotes = (authedUser, qID, option) => ({\n    type: UPDATE_ANSWERS_VOTES,\n    authedUser,\n    qID,\n    option\n})\n\nexport const handleUpdateUserAnswers = (qID, answer) => {\n    return (dispatch, getState) => {\n        const { authedUser } = getState()\n        return _saveQuestionAnswer({ authedUser, qid: qID, answer }).then(dispatch(updateUserAnswers(authedUser, qID, answer))).then(dispatch(updateAnswersVotes(authedUser, qID, answer)))\n    }\n}","import { _saveQuestion } from '../utils/_DATA'\n\nexport const RECEIVE_QUESTIONS = 'RECEIVE_QUESTIONS'\nexport const GET_CURRENT_QUESTION = 'GET_CURRENT_QUESTION'\nexport const ADD_QUESTION = 'ADD_QUESTION'\nexport const ADD_QUESTION_TO_USER = 'ADD_QUESTION_TO_USER'\n\nconst addQuestion = (question) => {\n    return {\n        type: ADD_QUESTION,\n        question,\n    }\n}\n\nconst addQuestionToUser = (authedUser, question) => {\n    return {\n        type: ADD_QUESTION_TO_USER,\n        authedUser,\n        question\n    }\n}\n\nexport const handleAddQuestion = (optionOneText, optionTwoText) => {\n    return (dispatch, getState) => {\n        console.log(getState())\n        const { authedUser } = getState()\n        return _saveQuestion({ optionOneText, optionTwoText, author: authedUser })\n            .then((question) => dispatch(addQuestion(question))).then(action => dispatch(addQuestionToUser(authedUser, action.question)))\n    }\n}\n\nexport const receiveQuestions = (questions) => ({\n    type: RECEIVE_QUESTIONS,\n    questions,\n})\n\nexport const getCurrentQuestion = (question) => ({\n    type: GET_CURRENT_QUESTION,\n    question\n})","import { _getUsers, _getQuestions } from '../utils/_DATA'\nimport { receiveUsers } from './users'\nimport { receiveQuestions } from './questions'\nimport { setAuthedUser } from './authedUser'\n\n\nexport const handleInitialData = (authedUser) => {\n    return (dispatch) => {\n\n        return Promise.all([_getQuestions(), _getUsers()]).then(([questions, users]) => {\n            dispatch(receiveUsers(users))\n            dispatch(receiveQuestions(questions))\n            dispatch(setAuthedUser(authedUser))\n        })\n    }\n}","import React, { Component } from \"react\";\nimport { Card, Image, Button } from \"semantic-ui-react\";\nimport { connect } from \"react-redux\";\nimport { Link } from \"react-router-dom\";\nimport { getCurrentQuestion } from \"../actions/questions\";\n\nclass Question extends Component {\n  handleClick = () => {\n    const question_withAnswered = {\n      ...this.props.question,\n      answered: this.props.answered,\n    };\n    this.props.dispatch(getCurrentQuestion(question_withAnswered));\n  };\n\n  render() {\n    return (\n      <Card>\n        <Card.Content>\n          <Image\n            floated=\"right\"\n            src={this.props.users[this.props.question.author].avatarURL}\n          />\n          <Card.Header>\n            {this.props.users[this.props.question.author].name}\n          </Card.Header>\n          <Card.Description>\n            <h3>Would You Rather</h3>\n            <p>{this.props.question.optionOne.text}</p>\n            <p>Or</p>\n            <p>{this.props.question.optionTwo.text}</p>\n          </Card.Description>\n        </Card.Content>\n        <Card.Content extra>\n          <div className=\"ui one buttons\">\n            <Link to={\"/questions/\" + this.props.id}>\n              <Button basic color=\"green\" onClick={() => this.handleClick()}>\n                View\n              </Button>\n            </Link>\n          </div>\n        </Card.Content>\n      </Card>\n    );\n  }\n}\n\nconst mapStateToProps = (\n  { authedUser, questions, users },\n  { id, answered }\n) => {\n  const question = questions[id];\n\n  return {\n    authedUser,\n    question,\n    users,\n    answered,\n  };\n};\n\nexport default connect(mapStateToProps)(Question);\n","import React, { Component } from \"react\";\nimport { Card } from \"semantic-ui-react\";\nimport Question from \"./Question\";\nimport { connect } from \"react-redux\";\n\nclass Questions extends Component {\n  getAnsweredQuestions = () =>\n    Object.keys(this.props.questions).filter((question) =>\n      Object.keys(this.props.users[this.props.authedUser].answers).includes(\n        question\n      )\n    );\n\n  getUnAnsweredQuestions = () =>\n    Object.keys(this.props.questions).filter(\n      (question) =>\n        !Object.keys(this.props.users[this.props.authedUser].answers).includes(\n          question\n        )\n    );\n  render() {\n    return (\n      <Card.Group>\n        {this.props.answered &&\n          this.getAnsweredQuestions()\n            .sort(\n              (a, b) =>\n                this.props.questions[b].timestamp -\n                this.props.questions[a].timestamp\n            )\n            .map((qId) => {\n              return <Question id={qId} key={qId} answered={true} />;\n            })}\n        {!this.props.answered &&\n          this.getUnAnsweredQuestions()\n            .sort(\n              (a, b) =>\n                this.props.questions[b].timestamp -\n                this.props.questions[a].timestamp\n            )\n            .map((qId) => {\n              return <Question id={qId} key={qId} answered={false} />;\n            })}\n      </Card.Group>\n    );\n  }\n}\n\nconst mapStateToProps = ({ users, questions, authedUser }, { answered }) => {\n  return {\n    questions,\n    answered,\n    authedUser,\n    users,\n  };\n};\n\nexport default connect(mapStateToProps)(Questions);\n","import React, { Component } from \"react\";\nimport { Tab } from \"semantic-ui-react\";\nimport Questions from \"./Questions\";\n\nconst panes = [\n  {\n    menuItem: \"Unanswered Questions\",\n    render: () => (\n      <Tab.Pane style={{ textAlign: \"center\", margin: \"0 auto\" }}>\n        <Questions answered={false} />\n      </Tab.Pane>\n    ),\n  },\n  {\n    menuItem: \"Answered Questions\",\n    render: () => (\n      <Tab.Pane style={{ textAlign: \"center\", margin: \"0 auto\" }}>\n        <Questions answered={true} />\n      </Tab.Pane>\n    ),\n  },\n];\n\nclass QuestionsTab extends Component {\n  render() {\n    return (\n      <>\n        <h2 style={{ textAlign: \"center\", margin: \"0 auto\" }}>Home Page</h2>\n        <br />\n        <Tab\n          panes={panes}\n          style={{\n            textAlign: \"center\",\n            margin: \"0 auto\",\n            width: \"50%\",\n          }}\n        />\n      </>\n    );\n  }\n}\n\nexport default QuestionsTab;\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Menu } from \"semantic-ui-react\";\nimport { Link } from \"react-router-dom\";\nimport { setAuthedUser } from \"../actions/authedUser\";\n\nclass Navbar extends Component {\n  state = { activeItem: \"home\" };\n\n  handleItemClick = (e, { name }) => {\n    this.setState({ activeItem: name });\n  };\n\n  handleLogOut = ({ name }) => {\n    this.setState({ activeItem: name });\n    this.props.dispatch(setAuthedUser(null));\n  };\n\n  render() {\n    const { activeItem } = this.state;\n\n    return (\n      <Menu secondary>\n        <Menu.Item\n          as={Link}\n          name=\"home\"\n          active={activeItem === \"home\"}\n          to=\"/homepage\"\n          onClick={this.handleItemClick}\n        ></Menu.Item>\n\n        <Menu.Item\n          as={Link}\n          name=\"NewQuestion\"\n          active={activeItem === \"NewQuestion\"}\n          to=\"/add\"\n          onClick={this.handleItemClick}\n        ></Menu.Item>\n\n        <Menu.Item\n          as={Link}\n          name=\"leaderboard\"\n          active={activeItem === \"leaderboard\"}\n          onClick={this.handleItemClick}\n          to=\"/leaderboard\"\n        ></Menu.Item>\n\n        <Menu.Menu position=\"right\">\n          <Menu.Item name=\"welcome\">Welcome {this.props.name}!</Menu.Item>\n          <Menu.Item name=\"avatar\">\n            <img src={this.props.avatar} alt=\"avatar\" />\n          </Menu.Item>\n\n          <Menu.Item\n            as={Link}\n            name=\"logout\"\n            active={activeItem === \"logout\"}\n            onClick={this.handleLogOut}\n            to=\"/\"\n          ></Menu.Item>\n        </Menu.Menu>\n      </Menu>\n    );\n  }\n}\n\nconst mapStateToProps = ({ authedUser, users }) => {\n  return {\n    avatar: users[authedUser].avatarURL,\n    name: users[authedUser].name,\n  };\n};\n\nexport default connect(mapStateToProps)(Navbar);\n","import React, { Component } from 'react'\nimport QuestionsTabs from './QuestionsTab'\nimport Navbar from './Navbar'\n\nclass HomePage extends Component {\n    render() {\n        return (\n            <div>\n                <Navbar />\n                <QuestionsTabs />\n            </div>\n        )\n    }\n}\n\nexport default HomePage","import React, { Component } from \"react\";\nimport { Form } from \"semantic-ui-react\";\nimport { handleAddQuestion } from \"../actions/questions\";\nimport { connect } from \"react-redux\";\nimport Navbar from \"./Navbar\";\nimport { Link } from \"react-router-dom\";\n\nclass NewQuestion extends Component {\n  state = {\n    optionOne: \"\",\n    optionTwo: \"\",\n  };\n\n  handleOptionOne = (e) => {\n    const text = e.target.value;\n\n    this.setState(() => ({\n      optionOne: text,\n    }));\n  };\n\n  handleOptionTwo = (e) => {\n    const text = e.target.value;\n\n    this.setState(() => ({\n      optionTwo: text,\n    }));\n  };\n\n  handleClick = (e) => {\n    const optionOne = this.state.optionOne;\n    const optionTwo = this.state.optionTwo;\n\n    this.props.dispatch(handleAddQuestion(optionOne, optionTwo));\n\n    this.setState(() => ({\n      optionOne: \"\",\n      optionTwo: \"\",\n    }));\n  };\n\n  render() {\n    return (\n      <div>\n        <Navbar />\n        <h2 style={{ textAlign: \"center\", margin: \"0 auto\" }}>New Question</h2>\n        <h3 style={{ textAlign: \"center\", margin: \"0 auto\" }}>\n          Would You Rather\n        </h3>\n        <br />\n        <Form style={{ textAlign: \"center\", margin: \"0 auto\", width: \"50%\" }}>\n          <label htmlFor=\"optionOne\">Type poll option 1:</label>\n          <input\n            id=\"optionOne\"\n            type=\"text\"\n            value={this.state.optionOne}\n            onChange={this.handleOptionOne}\n          />\n          <label htmlFor=\"optionTwo\">Type poll option 2:</label>\n          <input\n            id=\"optionTwo\"\n            type=\"text\"\n            value={this.state.optionTwo}\n            onChange={this.handleOptionTwo}\n          />\n          <Link to=\"/homepage\">\n            <button\n              type=\"submit\"\n              value=\"submit\"\n              onClick={(e) => this.handleClick(e)}\n            >\n              Submit\n            </button>\n          </Link>\n        </Form>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = ({ authedUser }) => {\n  return {\n    authedUser,\n  };\n};\n\nexport default connect(mapStateToProps)(NewQuestion);\n","import React, { Component } from \"react\";\nimport { Card, Image } from \"semantic-ui-react\";\nimport { connect } from \"react-redux\";\nimport Navbar from \"./Navbar\";\n\nclass LeaderBoard extends Component {\n  render() {\n    const users = this.props.users;\n    const userID = Object.keys(users).sort((a, b) => {\n      let score =\n        users[b].questions.length +\n        Object.keys(users[b].answers).length -\n        (users[a].questions.length + Object.keys(users[a].answers).length);\n      return score;\n    });\n    return (\n      <>\n        <Navbar />\n        <h2\n          style={{\n            textAlign: \"center\",\n            margin: \"0 auto\",\n          }}\n        >\n          Leaderboard\n        </h2>\n        <Card.Group\n          style={{\n            textAlign: \"center\",\n            margin: \"0 auto\",\n            width: \"25%\",\n          }}\n        >\n          <Card>\n            <Card.Content>\n              <Image floated=\"right\" src={users[userID[0]].avatarURL} />\n              <Card.Header>1. {users[userID[0]].name}</Card.Header>\n              <Card.Description>\n                Answered Question:{\" \"}\n                {Object.keys(users[userID[0]].answers).length}\n                <br />\n                Created Questions: {users[userID[0]].questions.length}\n              </Card.Description>\n            </Card.Content>\n            <Card.Content extra>\n              <div className=\"ui\">\n                <p>\n                  Score:{\" \"}\n                  {users[userID[0]].questions.length +\n                    Object.keys(users[userID[0]].answers).length}\n                </p>\n              </div>\n            </Card.Content>\n          </Card>\n\n          <Card>\n            <Card.Content>\n              <Image floated=\"right\" src={users[userID[1]].avatarURL} />\n              <Card.Header>2. {users[userID[1]].name}</Card.Header>\n              <Card.Description>\n                Answered Question:{\" \"}\n                {Object.keys(users[userID[1]].answers).length}\n                <br />\n                Created Questions: {users[userID[1]].questions.length}\n              </Card.Description>\n            </Card.Content>\n            <Card.Content extra>\n              <div className=\"ui\">\n                <p>\n                  Score:{\" \"}\n                  {users[userID[1]].questions.length +\n                    Object.keys(users[userID[1]].answers).length}\n                </p>\n              </div>\n            </Card.Content>\n          </Card>\n\n          <Card>\n            <Card.Content>\n              <Image floated=\"right\" src={users[userID[2]].avatarURL} />\n              <Card.Header>3. {users[userID[2]].name}</Card.Header>\n              <Card.Description>\n                Answered Question:{\" \"}\n                {Object.keys(users[userID[2]].answers).length}\n                <br />\n                Created Questions: {users[userID[2]].questions.length}\n              </Card.Description>\n            </Card.Content>\n            <Card.Content extra>\n              <div className=\"ui\">\n                <p>\n                  Score:{\" \"}\n                  {users[userID[2]].questions.length +\n                    Object.keys(users[userID[2]].answers).length}\n                </p>\n              </div>\n            </Card.Content>\n          </Card>\n        </Card.Group>\n      </>\n    );\n  }\n}\n\nconst mapStateToProps = ({ users }) => {\n  return {\n    users,\n  };\n};\n\nexport default connect(mapStateToProps)(LeaderBoard);\n","import React, { Component } from \"react\";\nimport Navbar from \"./Navbar\";\n\nclass NotFound extends Component {\n  render() {\n    return (\n      <>\n        <Navbar />\n        <div style={{ textAlign: \"center\", margin: \"0 auto\" }}>\n          <h3 style={{ color: \"red\" }}>\n            Oops! Sorry This Page Was Not Found. Please double Check the entered\n            Url\n          </h3>\n        </div>\n      </>\n    );\n  }\n}\n\nexport default NotFound;\n","import React, { Component } from \"react\";\nimport { Card, Image, Button } from \"semantic-ui-react\";\nimport { connect } from \"react-redux\";\nimport { getCurrentQuestion } from \"../actions/questions\";\nimport Navbar from \"./Navbar\";\nimport { Progress } from \"semantic-ui-react\";\nimport \"../style/style.css\";\nimport { handleUpdateUserAnswers } from \"../actions/users\";\n\nclass Poll extends Component {\n  handleClick = (e) => {\n    this.setState({\n      value: e.target.value,\n      answered: this.props.currentQuestion.answered,\n    });\n  };\n\n  handeVoting = (question, answer) => {\n    const qid = question.id;\n    this.props.dispatch(handleUpdateUserAnswers(qid, answer));\n    this.props.dispatch(\n      getCurrentQuestion({\n        ...this.props.questions[question.id],\n        answered: true,\n      })\n    );\n  };\n\n  render() {\n    const question = this.props.match.params.id;\n    const { users, authedUser, questions } = this.props;\n    !questions[question] && this.props.history.push(\"/notfound\");\n    return (\n      <>\n        {questions[question] && (\n          <div>\n            <Navbar />\n            <h2 style={{ textAlign: \"center\", margin: \"0 auto\" }}>Poll</h2>\n            <br />\n            <Card\n              style={{\n                textAlign: \"center\",\n                margin: \"0 auto\",\n                display: \"block\",\n                height: \"auto\",\n                minHeight: \"100% !important\",\n                overflow: \"auto\",\n              }}\n            >\n              {/*If not answered */}\n              {!this.props.currentQuestion.answered && (\n                <>\n                  <Card.Content>\n                    <Image\n                      floated=\"right\"\n                      size=\"mini\"\n                      src={users[questions[question].author].avatarURL}\n                    />\n                    <Card.Header>\n                      {users[questions[question].author].name}\n                    </Card.Header>\n                    <Card.Description>\n                      <h3>Would You Rather</h3>\n                      <form>\n                        <input\n                          type=\"radio\"\n                          id=\"optionOne\"\n                          name=\"vote\"\n                          value=\"optionOne\"\n                          onClick={(e) => this.handleClick(e)}\n                          required\n                        />\n                        <label htmlFor=\"optionOne\" className=\"radioOptions\">\n                          {\" \"}\n                          {questions[question].optionOne.text}\n                        </label>\n\n                        <center>\n                          <p>Or</p>\n                        </center>\n\n                        <input\n                          type=\"radio\"\n                          id=\"optionTwo\"\n                          name=\"vote\"\n                          value=\"optionTwo\"\n                          onClick={(e) => this.handleClick(e)}\n                          required\n                        />\n\n                        <label htmlFor=\"optionTwo\" className=\"radioOptions\">\n                          {\" \"}\n                          {questions[question].optionTwo.text}\n                        </label>\n                      </form>\n                    </Card.Description>\n                  </Card.Content>\n                  <Card.Content extra>\n                    <div className=\"ui Two buttons\">\n                      <Button\n                        basic\n                        color=\"green\"\n                        onClick={() =>\n                          this.handeVoting(\n                            questions[question],\n                            this.state.value\n                          )\n                        }\n                      >\n                        Vote\n                      </Button>\n                    </div>\n                  </Card.Content>\n                </>\n              )}\n              {/*If answered */}\n              {this.props.currentQuestion.answered && (\n                <>\n                  <Card.Content>\n                    <Image\n                      floated=\"right\"\n                      src={users[questions[question].author].avatarURL}\n                    />\n                    <Card.Header>\n                      {users[questions[question].author].name}\n                    </Card.Header>\n                    <Card.Description>\n                      <h2>Results:</h2>\n                      <h3>Would You Rather</h3>\n                      <form>\n                        {users[authedUser].answers[question] ===\n                          \"optionOne\" && (\n                          <p style={{ color: \"red\" }}>Your Choice!</p>\n                        )}\n                        <Progress\n                          id=\"optionOne\"\n                          percent={\n                            (questions[question].optionOne.votes.length /\n                              (questions[question].optionOne.votes.length +\n                                questions[question].optionTwo.votes.length)) *\n                            100\n                          }\n                          progress\n                        ></Progress>\n                        <label htmlFor=\"optionOne\">\n                          {questions[question].optionOne.text}\n                          <br />\n                          {questions[question].optionOne.votes.length} of\n                          {questions[question].optionTwo.votes.length +\n                            questions[question].optionOne.votes.length}\n                        </label>\n                        {users[authedUser].answers[question] ===\n                          \"optionTwo\" && (\n                          <p style={{ color: \"red\" }}>Your Choice!</p>\n                        )}\n                        <Progress\n                          id=\"optionTwo\"\n                          percent={\n                            (questions[question].optionTwo.votes.length /\n                              (questions[question].optionOne.votes.length +\n                                questions[question].optionTwo.votes.length)) *\n                            100\n                          }\n                          progress\n                        ></Progress>\n                        <label htmlFor=\"optionTwo\">\n                          {questions[question].optionTwo.text}\n                          <br />\n                          {questions[question].optionTwo.votes.length} of{\" \"}\n                          {questions[question].optionTwo.votes.length +\n                            questions[question].optionOne.votes.length}\n                        </label>\n                      </form>\n                    </Card.Description>\n                  </Card.Content>\n                </>\n              )}\n            </Card>\n          </div>\n        )}\n      </>\n    );\n  }\n}\n\nconst mapStateToProps = ({ users, authedUser, currentQuestion, questions }) => {\n  return {\n    authedUser,\n    currentQuestion,\n    users,\n    questions,\n  };\n};\n\nexport default connect(mapStateToProps)(Poll);\n","import React, { Component } from \"react\";\nimport Login from \"./Login\";\nimport { connect } from \"react-redux\";\nimport { handleInitialData } from \"../actions/initial.js\";\nimport HomePage from \"./HomePage\";\nimport NewQuestion from \"./NewQuestion\";\nimport Leaderboard from \"./Leaderboard\";\nimport NotFound from \"./NotFound\";\nimport { BrowserRouter, Route, Switch } from \"react-router-dom\";\nimport Poll from \"./Poll\";\n\nclass App extends Component {\n  componentDidMount() {\n    this.props.dispatch(handleInitialData(this.props.authedUser));\n  }\n  render() {\n    return (\n      <BrowserRouter>\n        {!this.props.authedUser && (\n          <Switch>\n            <Route path=\"/\" component={Login} />\n          </Switch>\n        )}\n\n        {this.props.authedUser && (\n          <Switch>\n            <Route path=\"/add\" component={NewQuestion}></Route>\n            <Route path=\"/homepage\" component={HomePage}></Route>\n            <Route path=\"/leaderboard\" component={Leaderboard}></Route>\n            <Route path={\"/questions/:id\"} component={Poll}></Route>\n            <Route component={NotFound}></Route>\n          </Switch>\n        )}\n      </BrowserRouter>\n    );\n  }\n}\n\nconst mapStateToProps = ({ authedUser }) => {\n  return {\n    authedUser,\n  };\n};\n\nexport default connect(mapStateToProps)(App);\n","import { SET_AUTHED_USER } from '../actions/authedUser'\n\nexport const authedUser = (state = null, action) => {\n    switch (action.type) {\n        case SET_AUTHED_USER:\n            return action.id\n        default:\n            return state\n    }\n}\n\nexport default authedUser","import { RECEIVE_QUESTIONS, ADD_QUESTION } from \"../actions/questions\"\nimport { UPDATE_ANSWERS_VOTES } from \"../actions/users\"\n\nexport const questions = (state = {}, action) => {\n    switch (action.type) {\n        case RECEIVE_QUESTIONS:\n            return {\n                ...state,\n                ...action.questions\n            }\n        case ADD_QUESTION:\n            return {\n                ...state,\n                [action.question.id]: action.question,\n            }\n        case UPDATE_ANSWERS_VOTES:\n            console.log(state[action.qID][action.option])\n            return {\n                ...state,\n                [action.qID]: {\n                    ...state[action.qID],\n                    [action.option]: {\n                        ...state[action.qID][action.option],\n                        votes: state[action.qID][action.option].votes.concat([action.authedUser])\n                    }\n                }\n            }\n        default:\n            return state\n    }\n}\n\nexport default questions","import { RECEIVE_USERS, UPDATE_USER_ANSWERS } from \"../actions/users\";\nimport { ADD_QUESTION_TO_USER } from \"../actions/questions\"\n\nexport const users = (state = {}, action) => {\n    switch (action.type) {\n        case RECEIVE_USERS:\n            return {\n                ...state,\n                ...action.users\n            }\n        case ADD_QUESTION_TO_USER:\n            let question = action.question\n            return {\n                ...state,\n                [action.authedUser]: {\n                    ...state[action.authedUser],\n                    questions: state[action.authedUser].questions.concat([question.id])\n                }\n            }\n        case UPDATE_USER_ANSWERS:\n            return {\n                ...state,\n                [action.authedUser]: {\n                    ...state[action.authedUser],\n                    answers: {\n                        ...state[action.authedUser].answers,\n                        [action.qID]: action.option\n                    }\n                }\n            }\n        default:\n            return state\n    }\n}\n\nexport default users","import { combineReducers } from 'redux'\nimport { authedUser } from './authedUser'\nimport { questions } from './questions'\nimport { users } from './users'\n\nimport { currentQuestion } from './currentQuestion'\n\nexport default combineReducers({\n    authedUser,\n    users,\n    questions,\n    currentQuestion,\n})","import { GET_CURRENT_QUESTION } from '../actions/questions'\n\nexport const currentQuestion = (state = {}, action) => {\n    switch (action.type) {\n        case GET_CURRENT_QUESTION:\n            console.log('success', action.question)\n            return {\n                ...state,\n                ...action.question\n            }\n        default: return state\n    }\n}","const logger = (store) => (next) => (action) => {\n    console.group(action.type)\n    console.log(\"action: \", action)\n    const returnValue = next(action)\n    console.log(\"The new state: \", store.getState())\n    console.groupEnd()\n    return returnValue\n}\n\nexport default logger","import thunk from \"redux-thunk\";\nimport logger from \"./logger\";\nimport { applyMiddleware } from 'redux'\n\nexport default applyMiddleware(\n    thunk,\n    logger\n)","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./components/App\";\nimport \"semantic-ui-css/semantic.min.css\";\nimport { createStore } from \"redux\";\nimport { Provider } from \"react-redux\";\nimport reducer from \"./reducers\";\nimport middleware from \"./middleware\";\n\nconst store = createStore(reducer, middleware);\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}